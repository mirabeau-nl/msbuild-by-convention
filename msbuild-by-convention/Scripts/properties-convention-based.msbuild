
<!-- originally posted at https://github.com/JorritSalverda/msbuild-by-convention/ -->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
 
  <PropertyGroup>
    <!-- common directories -->
    <BaseDirectory>..\..\</BaseDirectory>
    <DependencyDirectory>$(BaseDirectory)Dependencies\</DependencyDirectory>
    <DependencyNuGetDirectory>$(DependencyDirectory)NuGet\</DependencyNuGetDirectory>
    <SourceFolder>Source\</SourceFolder>
    <SourceDirectory>$(BaseDirectory)$(SourceFolder)</SourceDirectory>
    <BuildDirectory>$(BaseDirectory)msbuild-by-convention\</BuildDirectory>
    <DatabaseDirectory>$(BaseDirectory)Database\</DatabaseDirectory>
    <CustomBuildScriptsDirectory>$(BaseDirectory)Build\Scripts\</CustomBuildScriptsDirectory>
    <ScriptsDirectory>$(BuildDirectory)Scripts\</ScriptsDirectory>
    <BuildToolsDirectory>$(BuildDirectory)Tools\</BuildToolsDirectory>
    <BinDirectory>$(BuildDirectory)Bin\</BinDirectory>
    <ReleaseDirectory>$(BuildDirectory)Releases\</ReleaseDirectory>
    <ReleaseTempDirectory>$(ReleaseDirectory)Temp\</ReleaseTempDirectory>
    <TestResultsDirectory>$(BuildDirectory)TestResults\</TestResultsDirectory>
    <CodeAnalysisDirectory>$(BuildDirectory)CodeAnalysis\</CodeAnalysisDirectory>
    <CodeCoverageDirectory>$(BuildDirectory)CodeCoverage\</CodeCoverageDirectory>
    <CSharpSourceDirectory>$(BaseDirectory)Source\*\</CSharpSourceDirectory>
    <HtmlSourceDirectory>$(BaseDirectory)StaticSource\Html\</HtmlSourceDirectory>
    <FlashSourceDirectory>$(BaseDirectory)StaticSource\Flash\</FlashSourceDirectory>
    <IntegrationTestsDirectory>$(BaseDirectory)IntegrationTests\</IntegrationTestsDirectory>
    <JMeterTestsDirectory>$(IntegrationTestsDirectory)JMeterTests\</JMeterTestsDirectory>
    <ChocoDirectory>%ALLUSERSPROFILE%\chocolatey\bin\</ChocoDirectory>

    <!-- tool paths -->
    <NUnitToolPath>$(BuildToolsDirectory)NUnit.Runners.2.6.3\tools\</NUnitToolPath>
    <MSpecRunnerPath>$(BuildToolsDirectory)Machine.Specifications.0.6.0\tools\mspec-clr4.exe</MSpecRunnerPath>
    <MSpecToJUnitXsltPath>$(BuildToolsDirectory)MSpecToJunitXslt\MSpecToJUnit.xslt</MSpecToJUnitXsltPath>    
    
    <!-- Resolve MsTest.exe -->
    <MSTestRunnerPath Condition=" '$(MSTestRunnerPath)' == '' ">$(VSInstallDir)Common7\IDE\MSTest.exe</MSTestRunnerPath>
    <MSTestRunnerPath Condition=" !Exists('$(MSTestRunnerPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\Common7\IDE\MSTest.exe</MSTestRunnerPath>
    <MSTestRunnerPath Condition=" !Exists('$(MSTestRunnerPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 11.0\Common7\IDE\MSTest.exe</MSTestRunnerPath>
    <MSTestRunnerPath Condition=" !Exists('$(MSTestRunnerPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 10.0\Common7\IDE\MSTest.exe</MSTestRunnerPath>
    <MSTestRunnerPath Condition=" !Exists('$(MSTestRunnerPath)') ">MSTESTRUNNERPATH_UNDEFINED_AND_CANNOT_BE_RESOLVED_PLEASE_SET_IN_PROPERTIES\</MSTestRunnerPath>

    <LocalVSToolsPath>$(BuildToolsDirectory)VisualStudio.v11.0\</LocalVSToolsPath>
    
    <!-- Resolve VSToolsPath-->
    <_VSToolsPath Condition="'$(_VSToolsPath)' == ''">$(LocalVSToolsPath)</_VSToolsPath>
    <_VSToolsPath Condition=" !Exists('$(_VSToolsPath)') ">$(VSInstallDir)</_VSToolsPath>
    <_VSToolsPath Condition=" !Exists('$(_VSToolsPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 12.0\</_VSToolsPath>
    <_VSToolsPath Condition=" !Exists('$(_VSToolsPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 11.0\</_VSToolsPath>
    <_VSToolsPath Condition=" !Exists('$(_VSToolsPath)') ">$(MSBuildProgramFiles32)\Microsoft Visual Studio 10.0\</_VSToolsPath>
    <_VSToolsPath Condition=" !Exists('$(_VSToolsPath)') ">VSTOOLSPATH_UNDEFINED_AND_CANNOT_BE_RESOLVED_PLEASE_SET_IN_PROPERTIES\</_VSToolsPath>
    
    <VSToolsPath>$(LocalVSToolsPath)</VSToolsPath>
    
    <VisualStudioSqlServerDataToolsDir>$(_VSToolsPath)SSDT\</VisualStudioSqlServerDataToolsDir>

    <SqlServerRedistPath Condition="'$(SqlServerRedistPath)' == ''">$(BuildToolsDirectory)SqlServerRedistPath</SqlServerRedistPath>
    <SqlServerRedistPath Condition="!Exists('$(SqlServerRedistPath)')">$(MSBuildProgramFiles32)\Microsoft SQL Server\110\DAC\Bin</SqlServerRedistPath>
    <SqlServerRedistPath Condition="!Exists('$(SqlServerRedistPath)')">SQLSERVERREDISTPATH_UNDEFINED_AND_CANNOT_BE_RESOLVED_PLEASE_SET_IN_PROPERTIES</SqlServerRedistPath>
            
    <MSBuildCommunityTasksDirectory>$(BuildToolsDirectory)MSBuildTasks.1.4.0.88\tools\</MSBuildCommunityTasksDirectory>
    <MSBuildCommunityTasksPath>$(MSBuildCommunityTasksDirectory)MSBuild.Community.Tasks.dll</MSBuildCommunityTasksPath>
    <YUICompressorPath>$(BuildToolsDirectory)YUICompressor.NET.MSBuild.2.4.0.0\lib\NET20\</YUICompressorPath>
    <ExtensionTasksPath>$(BuildToolsDirectory)MSBuild.Extension.Pack.1.5.0\tools\net40\MSBuild.ExtensionPack.dll</ExtensionTasksPath>
    <FxCopPath>$(BuildToolsDirectory)FxCop.v10.0\</FxCopPath>
    <MsDeployDirectory>C:\Program Files\IIS\Microsoft Web Deploy V3\</MsDeployDirectory>
    <MsDeployPath>$(MsDeployDirectory)msdeploy.exe</MsDeployPath>
    <CloudExtensionsDir>$(BuildToolsDirectory)Windows.Azure.Tools.v2.2\</CloudExtensionsDir>
    <CommonTargetsExtensionFile>$(BuildToolsDirectory)Microsoft.Common.targets\Microsoft.WindowsAzure.Common.targets</CommonTargetsExtensionFile>
    <PowershellPath>$(windir)\system32\WindowsPowerShell\v1.0\powershell.exe</PowershellPath>
    <AzureDeployScript>AzureDeploy.ps1</AzureDeployScript>
    <AzureDeleteScript>AzureDelete.ps1</AzureDeleteScript>
    <AzureSwapScript>AzureSwap.ps1</AzureSwapScript>
    <AzureDatabaseDeleteScript>AzureDbDelete.ps1</AzureDatabaseDeleteScript>
    <FlexSdkPath>$(BuildToolsDirectory)flex_sdk_4.5.1.21328\bin\mxmlc.exe</FlexSdkPath>
    <DacDeployScript>DacDeploy.ps1</DacDeployScript>
    <JMeterToolPath>$(BuildToolsDirectory)apache-jmeter-2.11\apache-jmeter-2.11\bin\jmeter</JMeterToolPath>
    <JpegtranPath>$(BuildToolsDirectory)Jpegtran\jpegtran.exe</JpegtranPath>
    <OptiPngPath>$(ChocoDirectory)optipng</OptiPngPath>
    <WebPublishingTargetsSourceDirectory>$(BuildToolsDirectory)MSBuild.Microsoft.VisualStudio.Web.targets.12.0.4\tools\VSToolsPath\</WebPublishingTargetsSourceDirectory>
    <WebPublishingPath>$(VSToolsPath)Web\Microsoft.Web.Publishing.Tasks.dll</WebPublishingPath>

            
    <OpenCoverPath>$(BuildToolsDirectory)OpenCover.4.5.3723\</OpenCoverPath>
    <OpenCoverMSBuildTasksPath>$(OpenCoverPath)MSBuild\</OpenCoverMSBuildTasksPath>
    <ReportGeneratorPath>$(BuildToolsDirectory)ReportGenerator.1.9.1.0\</ReportGeneratorPath>		
    <BuildVersionFilePath>$(ScriptsDirectory)buildversion.txt</BuildVersionFilePath>
    <SonarRunnerPath>$(BuildToolsDirectory)SonarRunner.2.3\bin\sonar-runner.bat</SonarRunnerPath>
    <GallioPath>$(BuildToolsDirectory)GallioBundle.3.4.14.0\</GallioPath>
    <PhantomJsPath>$(BuildToolsDirectory)phantomjs.exe.1.9.2\tools\phantomjs\phantomjs.exe</PhantomJsPath>
    <YSlowPath>$(BuildToolsDirectory)yslow-phantomjs-3.1.1\yslow.js</YSlowPath>
    <JSHintPath>$(BuildToolsDirectory)jshint-r12\env\wsh.js</JSHintPath>
    <NuGetPath>$(BuildToolsDirectory)NuGet\NuGet.exe</NuGetPath>
    <ChocoPath>$(ChocoDirectory)chocolatey.exe</ChocoPath>
    <NuGetConfigPath>$(BuildToolsDirectory)NuGet\NuGet.config</NuGetConfigPath>
    <ReleaseVersionFilePath>$(BaseDirectory)releaseversion.txt</ReleaseVersionFilePath>
    <MirabeauDatabaseReleaseToolPath>$(BuildToolsDirectory)Mirabeau.DatabaseReleaseTool.1.2.3.2\lib\net40\Mirabeau.DatabaseReleaseTool.exe</MirabeauDatabaseReleaseToolPath>
    <WGetPath>$(BuildToolsDirectory)WGETWindows.1.11.4\wget.exe</WGetPath>

    <!-- other properties -->
    <BuildVersion Condition=" '$(BuildVersion)' != '' And '$(BuildNumber)' != '' ">$(BuildVersion).$(BuildNumber)</BuildVersion>
    <BuildVersion Condition=" '$(BuildVersion)' == '' ">$(build_number)</BuildVersion>
    <BuildVersion Condition=" '$(BuildVersion)' == '' ">$(CCNetLabel)</BuildVersion>

    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
    <DeployEnvironment Condition=" '$(DeployEnvironment)' == '' "></DeployEnvironment>
    <CompileTarget>Rebuild</CompileTarget>		
    <BuildParameters Condition=" '$(Configuration)' == 'Debug' ">Configuration=$(Configuration);DebugSymbols=true;DebugType=full;RunCodeAnalysis=false;Optimize=false;PreBuildEvent=;PostBuildEvent=</BuildParameters>
    <BuildParameters Condition=" '$(Configuration)' == 'Release' ">Configuration=$(Configuration);DebugSymbols=true;DebugType=pdbonly;RunCodeAnalysis=false;Optimize=true;PreBuildEvent=;PostBuildEvent=</BuildParameters>
    <SuitedForAllEnvironmentsDirectoryName>AllEnvironments</SuitedForAllEnvironmentsDirectoryName>
    <NuGetDirectoryName>NuGet</NuGetDirectoryName>
    <CreateUpdateableAspxFilesInRelease>false</CreateUpdateableAspxFilesInRelease>
    <ContinueOnTestError Condition=" '$(ContinueOnTestError)' == '' ">False</ContinueOnTestError>
    <OptimizeImages Condition=" '$(OptimizeImages)' == '' ">True</OptimizeImages>
    <IncludeCoverage Condition=" '$(IncludeCoverage)' == '' ">False</IncludeCoverage>
    <CopyDependenciesToBinFolder Condition=" '$(CopyDependenciesToBinFolder)' == '' ">False</CopyDependenciesToBinFolder>
    <CheckJavascriptOnBuild Condition=" '$(CheckJavascriptOnBuild)' == '' ">False</CheckJavascriptOnBuild>

    <SkipDefaultJavascriptMinification  Condition=" '$(SkipDefaultJavascriptMinification)' == '' ">False</SkipDefaultJavascriptMinification>
    <SkipDefaultCssMinification  Condition=" '$(SkipDefaultCssMinification)' == '' ">False</SkipDefaultCssMinification>
    <SkipDefaultSassCompile  Condition=" '$(SkipDefaultSassCompile)' == '' ">False</SkipDefaultSassCompile>
    <SkipAnalysis Condition=" '$(SkipAnalysis)' == '' ">False</SkipAnalysis>
    <SkipUmbracoSecurityFix Condition=" '$(SkipUmbracoSecurityFix)' == '' ">False</SkipUmbracoSecurityFix>
    <SkipSetVersionNumberInStaticFiles Condition=" '$(SkipSetVersionNumberInStaticFiles)' == '' ">False</SkipSetVersionNumberInStaticFiles>

    <ReplaceSsdtImportStatement Condition=" '$(ReplaceSsdtImportStatement)' == '' ">False</ReplaceSsdtImportStatement>
    <UseIncludedAzureSdkTargets Condition=" '$(UseIncludedAzureSdkTargets)' == '' ">False</UseIncludedAzureSdkTargets>
    <MinifyJavascript Condition=" '$(MinifyJavascript)' == '' ">True</MinifyJavascript>
    <MinifyCss Condition=" '$(MinifyCss)' == '' ">True</MinifyCss>
    <MinifyRootDirectory Condition=" '$(MinifyInSourceDirectory)' == '' Or '$(MinifyInSourceDirectory)' == 'True' ">$(SourceDirectory)</MinifyRootDirectory>			
    <MinifyRootDirectory Condition=" '$(MinifyRootDirectory)' == '' ">$(ReleaseTempDirectory)</MinifyRootDirectory>
    <!-- possible values: Both, NoVersion or WithVersion -->
    <MinifyVersioningType Condition=" '$(MinifyVersioningType)' == '' ">Both</MinifyVersioningType> 

    <!-- deploy properties -->
    <ProjectToDeploy></ProjectToDeploy>	
    <DeployServer></DeployServer>
    <DeployUserDomain></DeployUserDomain>
    <DeployUsername></DeployUsername>
    <DeployPassword></DeployPassword>
    <DeployTargetName></DeployTargetName>
    <DeployWarmupUrl></DeployWarmupUrl>
    <DeploySkipDirectoryPattern></DeploySkipDirectoryPattern>
    <DeploySkipFilePattern></DeploySkipFilePattern>
    <IncludeDeployExecutablesInRelease Condition=" '$(IncludeDeployExecutablesInRelease)' == '' ">False</IncludeDeployExecutablesInRelease>
    <UseMsDepoyAzureTask Condition=" '$(UseMsDepoyAzureTask)' == '' ">False</UseMsDepoyAzureTask>
    <DeployDirectory></DeployDirectory>
    <DeployDatabaseType Condition=" '$(DeployDatabaseType)' == '' ">MsSql</DeployDatabaseType> <!-- [MsSql|Oracle|MySql] -->
    

    <!-- runtime properties -->
    <ServiceUsername></ServiceUsername>
    <ServicePassword></ServicePassword>

    <!-- deploy dac properties -->
    <DacDeployAllowIncompatiblePlatform>True</DacDeployAllowIncompatiblePlatform>
    <DacDeployGenerateSmartDefaults>True</DacDeployGenerateSmartDefaults>
    <DacDeployBlockOnPossibleDataLoss>True</DacDeployBlockOnPossibleDataLoss>

    <!-- deploy azure properties -->
    <AzureSubscriptionID></AzureSubscriptionID>
    <AzureCertificateFilename Condition=" '$(AzureCertificateFilename)' == '' ">AzureManagementCertificate.pfx</AzureCertificateFilename>
    <AzureCertificatePassword></AzureCertificatePassword>
    <AzureHostedServiceName></AzureHostedServiceName>
    <AzureHostedServiceSlot></AzureHostedServiceSlot>
    <AzureStorageAccountName></AzureStorageAccountName>
    <AzureStorageAccountKey></AzureStorageAccountKey>
    <AzureSwapToProductionAfterDeploy Condition=" '$(AzureSwapToProductionAfterDeploy)' == '' ">True</AzureSwapToProductionAfterDeploy>
    <AzureRemoveStagingAfterSwap Condition=" '$(AzureRemoveStagingAfterSwap)' == '' ">True</AzureRemoveStagingAfterSwap>
    <AzureUpgradeInPlace Condition=" '$(AzureUpgradeInPlace)' == '' ">False</AzureUpgradeInPlace>

    <!-- sonar analysis properties. If not set try to read global variable from bamboo-->
    <SonarHostUrl Condition=" '$(SonarHostUrl)' == '' ">$(bamboo_SonarHostUrl)</SonarHostUrl>
    <SonarDbConnectionString Condition=" '$(SonarDbConnectionString)' == '' ">$(bamboo_SonarDbConnectionString)</SonarDbConnectionString>
    <SonarDbUsername Condition=" '$(SonarDbUsername)' == '' ">$(bamboo_SonarDbUsername)</SonarDbUsername>
    <SonarDbPassword Condition=" '$(SonarDbPassword)' == '' ">$(bamboo_SonarDbPassword)</SonarDbPassword>

    <SonarProfile Condition=" '$(SonarProfile)' == '' "></SonarProfile>
      
    <!-- The prefix for each solution and js webproject analysis project name to use in the ProjectName and ProjectKey, since sonar does not support 1 project for multiple solutions -->
    <SonarProjectPrefix></SonarProjectPrefix>
    <SonarProjectName></SonarProjectName>
    <SonarProjectKey></SonarProjectKey>

    <SonarBaseDirectory>$(BaseDirectory.Replace('\', '/'))</SonarBaseDirectory>
    
    <SonarSourceFolder>$(SourceFolder.Replace('\', '/'))</SonarSourceFolder>

    <SonarGlobalJavascriptExcludePattern>**/Umbraco_Client/**/*.*,**/Umbraco/**/*.*,**/umbraco/**/*.*,**/umbraco_client/**/*.*,**/jquery*,**/libs/**/*.js,**/packages/**/*,**/Scripts/**/*.min.js</SonarGlobalJavascriptExcludePattern>
    <SonarGlobalCSharpExcludePattern></SonarGlobalCSharpExcludePattern>
    <SonarProjectJavascriptExcludePattern></SonarProjectJavascriptExcludePattern>
    
    <FxCopPath>$(VS120COMNTOOLS)</FxCopPath>
    <FxCopPath Condition=" '$(FxCopPath)' == '' ">$(VS110COMNTOOLS)</FxCopPath>
    <FxCopPath>$(FxCopPath)..\..\Team Tools\Static Analysis Tools\FxCop\</FxCopPath>
    <FxCopPath>$(FxCopPath.Replace('\', '/'))</FxCopPath>

    <SonarRunnerOpts>-Xmx1024m</SonarRunnerOpts>

    <SonarJavascriptAnalysis></SonarJavascriptAnalysis>

    <!-- yslow test properties -->
    <YSlowTestUrl></YSlowTestUrl>
    <YSlowTreshold Condition=" '$(YSlowTreshold)' == '' ">B</YSlowTreshold>

    <!-- nuget server properties -->
    <NugetProjectToRelease></NugetProjectToRelease>
    <NuGetApiKey></NuGetApiKey>
    <NuGetServerUrl></NuGetServerUrl>

    <!-- delete properties -->
    <ProjectToDelete></ProjectToDelete>

    <!-- project and directory convention names -->
    <WebsiteProjectConventionName>Website</WebsiteProjectConventionName>
    <WebServiceProjectConventionName>WebService</WebServiceProjectConventionName>
    <ConsoleAppProjectConventionName>Console</ConsoleAppProjectConventionName>
    <WindowsServiceProjectConventionName>Service</WindowsServiceProjectConventionName>
    <DatabaseProjectConventionName>Database</DatabaseProjectConventionName>
    <WorkerProjectConventionName>Worker</WorkerProjectConventionName>
    <AzureProjectConventionName>Azure</AzureProjectConventionName>
    <FlashProjectDirectoryConventionName>Flash</FlashProjectDirectoryConventionName>
    
    <GruntDirectoryConventionName>static</GruntDirectoryConventionName>
    <GruntBuildFileConventionName>Gruntfile.js</GruntBuildFileConventionName>
    
    <JavascriptDirectoryConventionName>static\js</JavascriptDirectoryConventionName>
    <CssDirectoryConventionName>static\css</CssDirectoryConventionName>
    <SassDirectoryConventionName>static\scss</SassDirectoryConventionName>
    <SassRelativeOutputDirectoryConventionName>..\css\</SassRelativeOutputDirectoryConventionName>
    
    <UnitTestsProjectConventionName>UnitTests</UnitTestsProjectConventionName>
    <IntegrationTestsProjectConventionName>IntegrationTests</IntegrationTestsProjectConventionName>
    <StaticHtmlProjectConventionName>Html</StaticHtmlProjectConventionName>
    <StaticHtmlFileConventionName>index.html</StaticHtmlFileConventionName>
    <NugetProjectConventionName>NuGet</NugetProjectConventionName>

    <!-- default properties for website releases -->
    <UseAspNetCompilerForRelease Condition=" '$(UseAspNetCompilerForRelease)' == '' ">True</UseAspNetCompilerForRelease>
    <FilesToCopyForWebsiteReleasePattern></FilesToCopyForWebsiteReleasePattern>
    <FilesToRemoveForWebsiteReleasePattern></FilesToRemoveForWebsiteReleasePattern>

	<CssFilesToCopyAfterCopySourcePattern></CssFilesToCopyAfterCopySourcePattern>
	<CssFilesToCopyAfterCopyReleaseDestination></CssFilesToCopyAfterCopyReleaseDestination>
  </PropertyGroup>

  <ItemGroup>
    <!-- directories to create if missing -->
    <DirectoriesToCreate Include="$(BinDirectory)" />
    <DirectoriesToCreate Include="$(ReleaseDirectory)" />
    <DirectoriesToCreate Include="$(TestResultsDirectory)" />
    <DirectoriesToCreate Include="$(CodeAnalysisDirectory)" />
    <DirectoriesToCreate Include="$(CodeCoverageDirectory)" />

    <!-- limit the amount of environments the release is created for: /p:ConfigurationsToRelease="UAT;PROD" -->
    <ConfigurationsToRelease Include="$(ConfigurationsToRelease)" />
    <ConfigurationsToRelease Include="$(SuitedForAllEnvironmentsDirectoryName)" Condition=" @(ConfigurationsToRelease) != '' " />

    <ItemsToCopyToRelease Include="$(MSBuildCommunityTasksDirectory)**\*" Condition=" $(IncludeDeployExecutablesInRelease) " />
    <ItemsToCopyToRelease Include="$(MsDeployDirectory)*" Condition=" $(IncludeDeployExecutablesInRelease) " />
    <ItemsToCopyToRelease Include="$(SqlServerRedistPath)\**\*" Condition=" $(IncludeDeployExecutablesInRelease) " />
    <ItemsToCopyToRelease Include="$(NuGetPath)" Condition=" $(IncludeDeployExecutablesInRelease) " />
    <ItemsToCopyToRelease Include="$(ScriptsDirectory)*" Exclude="$(ScriptsDirectory)*.bat;$(ScriptsDirectory)*.txt" Condition=" $(IncludeDeployExecutablesInRelease) " />

  </ItemGroup>

  <!-- Shared Snippets -->
  <UsingTask TaskName="SetEnvironmentVariable" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <VariableName ParameterType="System.String" Output="false"></VariableName>
      <VariableValue ParameterType="System.String" Output="false"></VariableValue>
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />			
      <Using Namespace="System.Diagnostics" />
      <Code Type="Fragment" Language="cs"><![CDATA[          			 
        Environment.SetEnvironmentVariable(VariableName,VariableValue);
      ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>